<controls:UserControlBase xmlns="https://github.com/avaloniaui"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                          xmlns:viewModels="clr-namespace:StabilityMatrix.Avalonia.ViewModels"
                          xmlns:mocks="clr-namespace:StabilityMatrix.Avalonia.DesignData"
                          xmlns:checkpointManager="clr-namespace:StabilityMatrix.Avalonia.ViewModels.CheckpointManager"
                          xmlns:controls="clr-namespace:StabilityMatrix.Avalonia.Controls"
                          xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
                          xmlns:lang="clr-namespace:StabilityMatrix.Avalonia.Languages"
                          xmlns:scroll="clr-namespace:StabilityMatrix.Avalonia.Controls.Scroll"
                          xmlns:converters="clr-namespace:StabilityMatrix.Avalonia.Converters"
                          xmlns:vendorLabs="clr-namespace:StabilityMatrix.Avalonia.Controls.VendorLabs"
                          xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter"
                          xmlns:models="clr-namespace:StabilityMatrix.Core.Models;assembly=StabilityMatrix.Core"
                          xmlns:system="clr-namespace:System;assembly=System.Runtime"
                          xmlns:helpers="clr-namespace:StabilityMatrix.Avalonia.Helpers"
                          xmlns:input="clr-namespace:FluentAvalonia.UI.Input;assembly=FluentAvalonia"
                          xmlns:models1="clr-namespace:StabilityMatrix.Avalonia.Models"
                          mc:Ignorable="d" d:DesignWidth="850" d:DesignHeight="650"
                          x:Class="StabilityMatrix.Avalonia.Views.CheckpointsPage"
                          d:DataContext="{x:Static mocks:DesignData.CheckpointsPageViewModel}"
                          x:CompileBindings="True"
                          x:Name="ControlBase"
                          x:DataType="viewModels:CheckpointsPageViewModel">
    <controls:UserControlBase.Resources>
        <converters:FileUriConverter x:Key="FileUriConverter" />
        <converters:EnumStringConverter x:Key="EnumStringConverter" />
        <system:Boolean x:Key="False">False</system:Boolean>
        <system:Boolean x:Key="True">True</system:Boolean>
        <input:StandardUICommand x:Key="ItemClickCommand"
                                 Command="{Binding ItemClickCommand}"/>
        <input:StandardUICommand x:Key="NewFolderCommand"
                                 Command="{Binding CreateFolderCommand}"/>
    </controls:UserControlBase.Resources>

    <controls:UserControlBase.Styles>
        <!-- hide the chevron in the button -->
        <Style Selector="ui|CommandBarButton:flyout">
            <Style Selector="^ ui|FontIcon">
                <Setter Property="Foreground" Value="Transparent" />
            </Style>
        </Style>

        <Style Selector="TreeViewItem.dragover">
            <Setter Property="Background" Value="#22FFFFFF" />
        </Style>
        <Style Selector="Border.dragover">
            <Setter Property="Background" Value="#22FFFFFF" />
        </Style>
        <Style Selector="Border#HoverBorder">
            <Setter Property="Transitions">
                <Transitions>
                    <BoxShadowsTransition Property="BoxShadow" Duration="0:0:0.237" />
                </Transitions>
            </Setter>

            <Style Selector="^ vendorLabs|BetterAsyncImage">
                <Setter Property="Transitions">
                    <Transitions>
                        <TransformOperationsTransition Property="RenderTransform"
                                                       Duration="0:0:0.237">
                            <TransformOperationsTransition.Easing>
                                <QuadraticEaseInOut />
                            </TransformOperationsTransition.Easing>
                        </TransformOperationsTransition>
                    </Transitions>
                </Setter>
            </Style>

            <Style Selector="^:pointerover">
                <Setter Property="BoxShadow" Value="0 0 40 0 #60000000" />
                <Setter Property="Cursor" Value="Hand" />
                <Style Selector="^ vendorLabs|BetterAsyncImage">
                    <Setter Property="CornerRadius" Value="12" />
                    <Setter Property="RenderTransform" Value="scale(1.03, 1.03)" />
                </Style>
                <Style Selector="^ Border#ModelCardBottom">
                    <Setter Property="Background" Value="#CC000000" />
                </Style>
            </Style>

            <Style Selector="^:not(:pointerover)">
                <Setter Property="BoxShadow" Value="0 0 20 0 #60000000" />
                <Setter Property="Cursor" Value="Arrow" />
                <Style Selector="^ vendorLabs|BetterAsyncImage">
                    <Setter Property="CornerRadius" Value="8" />
                    <Setter Property="RenderTransform" Value="scale(1, 1)" />
                </Style>
                <Style Selector="^ Border#ModelCardBottom">
                    <Setter Property="Background" Value="#99000000" />
                </Style>
            </Style>
        </Style>
    </controls:UserControlBase.Styles>

    <Grid Margin="16" RowDefinitions="Auto,*"
          ColumnDefinitions="Auto, *">
        <Grid Grid.Row="0"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              Margin="0,0,0,8"
              ColumnDefinitions="*, Auto">
            <TextBox
                MinWidth="250"
                MinHeight="40"
                Margin="4,0"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                Text="{Binding SearchQuery, Mode=TwoWay}"
                TextAlignment="Left"
                FontSize="16"
                Watermark="{x:Static lang:Resources.Action_Search}">
                <TextBox.InnerRightContent>
                    <Grid>
                        <Button Classes="transparent-full"
                                IsVisible="{Binding !!SearchQuery.Length}"
                                Command="{Binding ClearSearchQuery}">
                            <ui:SymbolIcon Symbol="Cancel" />
                        </Button>
                        <ui:SymbolIcon
                            IsVisible="{Binding !SearchQuery.Length}"
                            Margin="0,0,10,0"
                            FontSize="16"
                            Symbol="Find" />
                    </Grid>
                </TextBox.InnerRightContent>
            </TextBox>
            <ui:CommandBar
                Grid.Column="1"
                x:Name="CommandBar"
                Margin="8,0,0,0"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                HorizontalAlignment="Right"
                HorizontalContentAlignment="Right"
                DefaultLabelPosition="Right">
                <ui:CommandBar.PrimaryCommands>
                    <ui:CommandBarElementContainer>
                        <SplitButton
                            Classes="transparent-full"
                            HorizontalAlignment="Left"
                            FontFamily="{DynamicResource ContentControlThemeFontFamily}"
                            FontWeight="Normal"
                            FontSize="12"
                            Command="{Binding ScanMetadataCommand}"
                            CommandParameter="{StaticResource False}"
                            Padding="8">
                            <SplitButton.Content>
                                <Grid ColumnDefinitions="Auto, Auto">
                                    <ui:SymbolIcon Grid.Column="0"
                                                   Symbol="CloudDownload"
                                                   FontSize="18" />
                                    <TextBlock Grid.Column="1"
                                               Text="{x:Static lang:Resources.Label_FindConnectedMetadata}"
                                               Margin="8,0,0,0"
                                               VerticalAlignment="Center" />
                                </Grid>
                            </SplitButton.Content>

                            <SplitButton.Flyout>
                                <ui:FAMenuFlyout
                                    Placement="Bottom">
                                    <ui:MenuFlyoutItem Text="{x:Static lang:Resources.Action_UpdateExistingMetadata}"
                                                       Command="{Binding ScanMetadataCommand}"
                                                       CommandParameter="{StaticResource True}" />
                                </ui:FAMenuFlyout>
                            </SplitButton.Flyout>
                        </SplitButton>
                    </ui:CommandBarElementContainer>
                    <ui:CommandBarToggleButton
                        Label="Show Nested Models"
                        IsChecked="{Binding ShowModelsInSubfolders, Mode=TwoWay}">
                        <ui:CommandBarToggleButton.IconSource>
                            <controls:FASymbolIconSource Symbol="fa-solid fa-folder-tree"/>
                        </ui:CommandBarToggleButton.IconSource>
                    </ui:CommandBarToggleButton>
                    
                    <ui:CommandBarSeparator Padding="8, 4"/>
                    
                    <ui:CommandBarButton
                        IconSource="Refresh"
                        VerticalAlignment="Center"
                        Command="{Binding RefreshCommand}"
                        Label="{x:Static lang:Resources.Action_Refresh}" />
                    <ui:CommandBarButton
                        IconSource="Sort"
                        VerticalAlignment="Center"
                        Label="{x:Static lang:Resources.Label_Sort}">
                        <ui:CommandBarButton.Flyout>
                            <Flyout>
                                <StackPanel Orientation="Vertical">
                                    <ListBox ItemsSource="{Binding SortOptions}"
                                             SelectedItem="{Binding  SelectedSortOption}">
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ItemsPresenter />
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type models:CheckpointSortMode}">
                                                <TextBlock
                                                    Text="{Binding ., Converter={StaticResource EnumStringConverter}}" />
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Separator Margin="8" />
                                    <ListBox ItemsSource="{Binding SortDirections}"
                                             SelectedItem="{Binding  SelectedSortDirection}">
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ItemsPresenter />
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type componentModel:ListSortDirection}">
                                                <TextBlock
                                                    Text="{Binding ., Converter={StaticResource EnumStringConverter}}" />
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Separator Margin="8" />
                                    <ToggleSwitch
                                        Content="Sort Connected Models First"
                                        IsChecked="{Binding SortConnectedModelsFirst, Mode=TwoWay}" />
                                </StackPanel>
                            </Flyout>
                        </ui:CommandBarButton.Flyout>
                    </ui:CommandBarButton>
                    <ui:CommandBarButton
                        IconSource="Filter"
                        VerticalAlignment="Center"
                        Label="Filter">
                        <ui:CommandBarButton.Flyout>
                            <Flyout>
                                <StackPanel Orientation="Vertical">
                                    <Button Content="{Binding ClearButtonText}"
                                            HorizontalAlignment="Stretch"
                                            Classes="transparent"
                                            Command="{Binding ClearOrSelectAllBaseModelsCommand}"
                                            Margin="0,0,0,8" />
                                    <ListBox ItemsSource="{Binding BaseModelOptions}"
                                             SelectionMode="Multiple, Toggle"
                                             SelectedItems="{Binding SelectedBaseModels}">
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ItemsPresenter />
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type checkpointManager:BaseModelOptionViewModel}">
                                                <TextBlock Text="{Binding ModelType}" />
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </StackPanel>
                            </Flyout>
                        </ui:CommandBarButton.Flyout>
                    </ui:CommandBarButton>
                    <!-- <ui:CommandBarToggleButton -->
                    <!--     IconSource="Image" -->
                    <!--     Label="{x:Static lang:Resources.Label_ShowModelImages}" -->
                    <!--     IsChecked="{Binding ShowConnectedModelImages, Mode=TwoWay}"> -->
                    <!-- </ui:CommandBarToggleButton> -->
                </ui:CommandBar.PrimaryCommands>

                <ui:CommandBar.SecondaryCommands>
                    <ui:CommandBarButton
                        IconSource="OpenFolder"
                        VerticalAlignment="Center"
                        Command="{x:Static helpers:IOCommands.OpenFolderBrowserCommand}"
                        CommandParameter="{Binding ModelsFolder}"
                        Label="{x:Static lang:Resources.Label_ModelsFolder}" />
                    <ui:CommandBarToggleButton
                        IconSource="Cloud"
                        Label="{x:Static lang:Resources.Label_ImportAsConnected}"
                        IsChecked="{Binding IsImportAsConnectedEnabled, Mode=TwoWay}" />
                    <ui:CommandBarToggleButton
                        IconSource="MoveToFolder"
                        Label="Move All Selected Models"
                        ToolTip.Tip="When enabled, dragging and dropping a model will also move any selected models to the drop location."
                        IsChecked="{Binding DragMovesAllSelected, Mode=TwoWay}" />
                </ui:CommandBar.SecondaryCommands>
            </ui:CommandBar>
        </Grid>

        <TreeView Grid.Row="1"
                  Grid.Column="0"
                  Name="CategoryTree"
                  x:Name="CategoryTree"
                  IsVisible="{Binding ShowFolders}"
                  Margin="0,0,12,0"
                  DragDrop.AllowDrop="True"
                  ItemsSource="{Binding Categories}"
                  SelectedItem="{Binding SelectedCategory}">
            <TreeView.Styles>
                <Style Selector="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding $self.((models1:CheckpointCategory)DataContext).IsExpanded, Mode=TwoWay}"/>
                </Style>
            </TreeView.Styles>
            <TreeView.ContextFlyout>
                <ui:FAMenuFlyout>
                    <ui:MenuFlyoutItem Text="{x:Static lang:Resources.Action_OpenInExplorer}"
                                       Command="{Binding OpenFolderFromTreeviewCommand}"
                                       CommandParameter="{Binding $parent[TreeView].SelectedItem}">
                        <ui:MenuFlyoutItem.IconSource>
                            <ui:SymbolIconSource Symbol="OpenFolder" />
                        </ui:MenuFlyoutItem.IconSource>
                    </ui:MenuFlyoutItem>
                    <ui:MenuFlyoutItem Text="New Folder"
                                       Command="{Binding CreateFolderCommand}"
                                       CommandParameter="{Binding $parent[TreeView].SelectedItem}">
                        <ui:MenuFlyoutItem.IconSource>
                            <ui:SymbolIconSource Symbol="NewFolder" />
                        </ui:MenuFlyoutItem.IconSource>
                    </ui:MenuFlyoutItem>
                    
                    <ui:MenuFlyoutSeparator />
                    
                    <ui:MenuFlyoutItem Text="{x:Static lang:Resources.Action_Delete}"
                                       Command="{Binding DeleteFolderCommand}"
                                       CommandParameter="{Binding $parent[TreeView].SelectedItem}">
                        <ui:MenuFlyoutItem.IconSource>
                            <ui:SymbolIconSource Symbol="Delete" />
                        </ui:MenuFlyoutItem.IconSource>
                    </ui:MenuFlyoutItem>
                </ui:FAMenuFlyout>
            </TreeView.ContextFlyout>
            <TreeView.ItemTemplate>
                <TreeDataTemplate ItemsSource="{Binding SubDirectories}">
                    <TextBlock MaxWidth="250"
                               TextWrapping="NoWrap"
                               Margin="0,0,12,0"
                               TextTrimming="CharacterEllipsis"
                               ToolTip.Tip="{Binding Name}">
                        <Run Text="{Binding Name}" />
                        <Run Text=" (" /><Run Text="{Binding Count}" /><Run Text=")" />
                    </TextBlock>
                </TreeDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <scroll:BetterScrollViewer Grid.Column="1"
                                   Grid.Row="1"
                                   DragDrop.AllowDrop="True"
                                   Padding="0,0,4,0">
            <ItemsRepeater
                x:Name="ImageRepeater"
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                ItemsSource="{Binding Models}">
                <ItemsRepeater.Layout>
                    <UniformGridLayout MinColumnSpacing="8" MinRowSpacing="8" />
                </ItemsRepeater.Layout>
                <ItemsRepeater.ItemTemplate>
                    <DataTemplate DataType="{x:Type checkpointManager:CheckpointFileViewModel}">
                        <Border Name="HoverBorder"
                                ClipToBounds="True"
                                DragDrop.AllowDrop="True"
                                CornerRadius="12">
                            <Interaction.Behaviors>
                                <BehaviorCollection>
                                    <ContextDragBehavior HorizontalDragThreshold="6" VerticalDragThreshold="6" />
                                </BehaviorCollection>
                            </Interaction.Behaviors>
                            <Border.ContextFlyout>
                                <ui:FAMenuFlyout>
                                    <ui:MenuFlyoutItem Command="{Binding CopyTriggerWordsCommand}"
                                                       IsVisible="{Binding CanShowTriggerWords}"
                                                       Text="{x:Static lang:Resources.Action_CopyTriggerWords}"
                                                       IconSource="Copy" />
                                    <ui:MenuFlyoutItem Command="{Binding FindOnModelBrowserCommand}"
                                                       IsVisible="{Binding CheckpointFile.HasConnectedModel}"
                                                       Text="{x:Static lang:Resources.Label_FindInModelBrowser}"
                                                       IconSource="Find" />
                                    <ui:MenuFlyoutSeparator IsVisible="{Binding CanShowTriggerWords}" />
                                    <ui:MenuFlyoutItem Command="{Binding OpenOnCivitAiCommand}"
                                                       Text="{x:Static lang:Resources.Action_OpenOnCivitAi}"
                                                       IconSource="Link"
                                                       IsVisible="{Binding CheckpointFile.HasConnectedModel}" />
                                    <ui:MenuFlyoutItem
                                        Command="{Binding CopyModelUrlCommand}"
                                        Text="Copy Link to Clipboard"
                                        IconSource="Clipboard"
                                        IsVisible="{Binding CheckpointFile.HasConnectedModel}" />
                                    <ui:MenuFlyoutItem Text="{x:Static lang:Resources.Label_FindConnectedMetadata}"
                                                       IconSource="Find"
                                                       Command="{Binding FindConnectedMetadataCommand}"
                                                       CommandParameter="{StaticResource False}"
                                                       IsVisible="{Binding !CheckpointFile.HasConnectedModel}" />
                                    <ui:MenuFlyoutItem
                                        Text="{x:Static lang:Resources.Action_UpdateExistingMetadata}"
                                        IconSource="Sync"
                                        Command="{Binding FindConnectedMetadataCommand}"
                                        CommandParameter="{StaticResource True}"
                                        IsVisible="{Binding CheckpointFile.HasConnectedModel}" />

                                    <ui:MenuFlyoutSeparator />
                                    <ui:MenuFlyoutItem Command="{Binding RenameCommand}"
                                                       Text="{x:Static lang:Resources.Action_Rename}" IconSource="Rename" />
                                    <ui:MenuFlyoutItem Command="{Binding DeleteCommand}"
                                                       CommandParameter="{StaticResource True}"
                                                       Text="{x:Static lang:Resources.Action_Delete}"
                                                       IconSource="Delete" />
                                </ui:FAMenuFlyout>
                            </Border.ContextFlyout>

                            <Grid RowDefinitions="*, Auto">
                                <CheckBox VerticalAlignment="Top"
                                          HorizontalAlignment="Right"
                                          Margin="14,8"
                                          Padding="0"
                                          IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                          ZIndex="100">
                                    <CheckBox.RenderTransform>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </CheckBox.RenderTransform>
                                    <CheckBox.Styles>
                                        <Style Selector="CheckBox">
                                            <Setter Property="CornerRadius" Value="16" />
                                        </Style>
                                    </CheckBox.Styles>
                                </CheckBox>

                                <Button Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Margin="0"
                                        Padding="0"
                                        ClipToBounds="True"
                                        CornerRadius="12"
                                        Command="{StaticResource ItemClickCommand}"
                                        CommandParameter="{Binding }">
                                    <vendorLabs:BetterAsyncImage
                                        Width="330"
                                        Height="400"
                                        ClipToBounds="True"
                                        Stretch="UniformToFill"
                                        CornerRadius="8"
                                        Source="{Binding ThumbnailUri, Converter={StaticResource FileUriConverter}}" />
                                </Button>
                                
                                <StackPanel Grid.Row="0" Orientation="Horizontal"
                                            IsVisible="{Binding CheckpointFile.HasConnectedModel}">
                                    <controls:Card
                                        Height="24"
                                        Margin="8,8,0,0"
                                        Padding="4"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Classes="info">

                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="11"
                                            FontWeight="Medium"
                                            Text="{Binding ModelType}" />
                                    </controls:Card>
                                    <controls:Card
                                        Height="24"
                                        Margin="4,8,0,0"
                                        Padding="4"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Classes="info">

                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="11"
                                            FontWeight="Medium"
                                            Text="{Binding BaseModelName}"
                                            IsVisible="{Binding BaseModelName, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
                                    </controls:Card>
                                    <controls:Card
                                        Height="24"
                                        Margin="4,8,0,0"
                                        Padding="4"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Classes="success"
                                        IsVisible="{Binding CheckpointFile.HasUpdate}">
                                    
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="11"
                                            FontWeight="Medium">
                                            <Run Text="{x:Static lang:Resources.Label_UpdateAvailable}"/>
                                            <Run Text="{Binding CheckpointFile.LatestModelInfo.LatestVersionCreatedAt}"/>
                                        </TextBlock>
                                    </controls:Card>
                                </StackPanel>
                                
                                <Border
                                    Name="ModelCardBottom"
                                    IsHitTestVisible="False"
                                    Padding="8"
                                    CornerRadius="0,0,8,8"
                                    Grid.Row="1">
                                    <StackPanel>
                                        <TextBlock Text="{Binding CheckpointFile.DisplayModelName}"
                                                   MaxWidth="300"
                                                   TextWrapping="NoWrap"
                                                   HorizontalAlignment="Left"
                                                   ToolTip.Tip="{Binding CheckpointFile.DisplayModelName}" />
                                        <TextBlock
                                            FontSize="13"
                                            Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                            HorizontalAlignment="Left"
                                            Margin="0,4"
                                            Text="{Binding CheckpointFile.DisplayModelVersion, FallbackValue=''}"
                                            TextWrapping="WrapWithOverflow"
                                            IsVisible="{Binding CheckpointFile.HasConnectedModel}" />

                                        <TextBlock Text="{Binding CheckpointFile.FileName}"
                                                   MaxWidth="300"
                                                   TextWrapping="NoWrap"
                                                   Margin="0,0,0,4"
                                                   FontSize="13"
                                                   Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                                   HorizontalAlignment="Left"
                                                   ToolTip.Tip="{Binding CheckpointFile.FileName}" />

                                        <TextBlock MaxWidth="300"
                                                   TextWrapping="NoWrap"
                                                   FontSize="13"
                                                   Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                                   HorizontalAlignment="Left"
                                                   IsVisible="{Binding CanShowTriggerWords}"
                                                   ToolTip.Tip="{Binding CheckpointFile.ConnectedModelInfo.TrainedWordsString}">
                                            <Run Text="Trigger words:" />
                                            <Run Text="{Binding CheckpointFile.ConnectedModelInfo.TrainedWordsString}" />
                                        </TextBlock>
                                    </StackPanel>
                                </Border>

                                <Border Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Margin="-14, -16"
                                        Background="#BB000000"
                                        IsVisible="{Binding IsLoading}"
                                        CornerRadius="12" />

                                <TextBlock Grid.Row="0"
                                           Grid.RowSpan="2"
                                           x:CompileBindings="False"
                                           Margin="0,64,0,0"
                                           Text="{Binding Progress.Title}"
                                           TextWrapping="Wrap"
                                           TextAlignment="Center"
                                           IsVisible="{Binding IsLoading}"
                                           VerticalAlignment="Center" />

                                <!--  Progress ring  -->
                                <controls:ProgressRing
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Height="64"
                                    Width="64"
                                    Foreground="{DynamicResource ThemeRedColor}"
                                    BorderThickness="4"
                                    HorizontalAlignment="Center"
                                    IsIndeterminate="True"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    IsEnabled="{Binding IsLoading}"
                                    IsVisible="{Binding IsLoading}" />
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsRepeater.ItemTemplate>
            </ItemsRepeater>
        </scroll:BetterScrollViewer>

        <Border Grid.Row="1" Grid.Column="1" Background="#AA000000"
                CornerRadius="8"
                IsVisible="{Binding IsLoading}">
            <StackPanel Orientation="Vertical"
                        VerticalAlignment="Center">
                <TextBlock Text="{Binding Progress.Text, FallbackValue=Loading..., TargetNullValue=Loading...}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontSize="20" />
                <ProgressBar IsIndeterminate="{Binding Progress.IsIndeterminate}"
                             Value="{Binding Progress.Value}"
                             Margin="8,36,8,0" />
            </StackPanel>
        </Border>

        <Border Grid.Row="1" Grid.Column="1" Background="#AA000000"
                DragDrop.AllowDrop="True"
                CornerRadius="8"
                Tag="DragOverlay"
                IsVisible="{Binding IsDragOver}">
            <StackPanel Orientation="Vertical"
                        VerticalAlignment="Center">
                <TextBlock Text="{x:Static lang:Resources.Label_DragAndDropCheckpointsHereToImport}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontSize="20" />
            </StackPanel>
        </Border>

        <ui:InfoBar Grid.Row="1"
                    Grid.Column="1"
                    IsOpen="{Binding !!NumItemsSelected}"
                    HorizontalAlignment="Right"
                    HorizontalContentAlignment="Right"
                    VerticalAlignment="Bottom"
                    Margin="0,0,8,8"
                    IsIconVisible="False"
                    Background="#AA000000"
                    CornerRadius="8"
                    CloseButtonCommand="{Binding ClearSelectionCommand}">
            <ui:InfoBar.Title>
                <MultiBinding StringFormat="{}{0} Selected">
                    <Binding Path="NumItemsSelected" />
                </MultiBinding>
            </ui:InfoBar.Title>
            <ui:InfoBar.ActionButton>
                <Button
                    Classes="danger"
                    Command="{Binding DeleteCommand}"
                    Content="{x:Static lang:Resources.Action_Delete}" />
            </ui:InfoBar.ActionButton>
        </ui:InfoBar>
    </Grid>
</controls:UserControlBase>
